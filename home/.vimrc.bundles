
" --- let Vundle manage Vundle
Bundle 'gmarik/vundle'

"-- VIM Powerline options
" if has("python")
"   Bundle 'Lokaltog/powerline', {'rtp': 'powerline/bindings/vim/'}
"   set noshowmode
" else
"   Bundle 'Lokaltog/vim-powerline'
"   let g:Powerline_symbols = 'unicode'
"   set noshowmode
"endif
  " let g:Powerline_symbols = 'fancy'
  " let g:Powerline_colorscheme = 'vk'

  " --- CtrlP plugin for fuzzy file finding
  Bundle 'ctrlpvim/ctrlp.vim'
  let g:ctrlp_map = '<c-p>'
  let g:ctrlp_cmd = 'CtrlP'
  let g:ctrlp_custom_ignore = {
      \ 'dir': '\v[\/](\.git|\.hg|\.svn|CVS|tmp|Library|Applications|Music|[^\/]*-store)$',
      \ 'file': '\v\.(exe|so|dll)$',
      \
      \ }
  let g:ctrlp_user_command = {
      \ 'types' : {
      \ 1: ['.git', 'cd %s && git ls-files . --cached --exclude-standard --others'],
      \ 2: ['.hg', 'hg --cwd %s locate -I .'],
      \
      \ }
      \ }

   "--- Fast autocompletion
   Bundle 'Valloric/YouCompleteMe'
   if !filereadable(expand('~/.vim/bundle/YouCompleteMe/third_party/ycmd/ycm_core.so'))
     call system('cd ~/.vim/bundle/YouCompleteMe && ./install.sh')
   endif
  " Bundle "davidhalter/jedi-vim"

  " --- Syntax checking
  Bundle 'scrooloose/syntastic'
  " Lets use fancy symbols
  let g:syntastic_error_symbol='✗'
  let g:syntastic_warning_symbol='⚠'
  let g:syntastic_html_tidy_ignore_errors=[" proprietary attribute \"ng-", " proprietary attribute \"novalidate"]
  let g:syntastic_javascript_checkers = ['eslint']



  Bundle 'tomtom/tcomment_vim'
  Bundle 'vim-ruby/vim-ruby'
  Bundle 'tpope/vim-bundler'
  Bundle 'tpope/vim-rails'
  Bundle 'tpope/vim-haml'
  "Bundle 'tpope/vim-sensible'
  Bundle 'cakebaker/scss-syntax.vim'
  Bundle 'tpope/vim-fugitive'
  Bundle 'vim-scripts/argtextobj.vim'
  Bundle 'kana/vim-textobj-entire'
  Bundle 'kana/vim-textobj-indent'
  Bundle 'kana/vim-textobj-user'
  Bundle 'kana/vim-textobj-line'
  "Bundle 'rbonvall/vim-textobj-latex'
  Bundle 'nelstrom/vim-textobj-rubyblock'
  Bundle 'bkad/CamelCaseMotion'
  call camelcasemotion#CreateMotionMappings(',')
  Bundle 'chrisbra/Recover.vim'
  Bundle "MarcWeber/vim-addon-mw-utils"
	Bundle 'tomtom/tlib_vim'

  Bundle 'SirVer/ultisnips'
  Bundle "honza/vim-snippets"
	"Bundle 'astashov/vim-ruby-debugger'
	Bundle 'scrooloose/nerdtree'
	"Bundle 'vim-scripts/mru.vim'
  Bundle 'tomtom/tskeleton_vim'
  "Bundle 'Shougo/neocomplcache'
  Bundle 'vim-scripts/loremipsum'
	Bundle 'vim-scripts/taglist.vim'
	Bundle 'tmhedberg/matchit'
	"Bundle 'vim-scripts/closetag.vim'
	"  "timcharper/textile.vim",
	"  "tpope/vim-cucumber",
	"  "tpope/vim-markdown",
  Bundle 'tpope/vim-repeat'
	Bundle 'tpope/vim-surround'
	"  "tpope/vim-vividchalk",
	"Bundle 'pix/vim-align'
	"  "tsaleh/vim-shoulda",
	"Bundle 'tsaleh/vim-supertab'
	"  "tsaleh/vim-tcomment",
	"Bundle 'git://repo.or.cz/vcscommand'
  Bundle 'tpope/vim-endwise'
  Bundle 'jiangmiao/auto-pairs'
  " let g:AutoPairsFlyMode = 1
  let g:AutoPairsShortcutBackInsert = '<M-b>'
  Bundle 'terryma/vim-multiple-cursors'
  Bundle 'altercation/vim-colors-solarized'
  Bundle 'notpratheek/vim-luna'
  Bundle "pangloss/vim-javascript"
  Bundle "mxw/vim-jsx"
  Bundle "marijnh/tern_for_vim"
  Bundle "mattn/emmet-vim"
  Bundle "othree/html5.vim"
  Bundle "Lokaltog/vim-easymotion.git"
  Plugin 'haya14busa/incsearch.vim'

  Bundle "benmills/vimux"
  Bundle "julienr/vimux-pyutils"
  Bundle 'kchmck/vim-coffee-script'
  Bundle 'fatih/vim-go'
  " Airline
  Plugin 'vim-airline/vim-airline-themes'
  let g:airline_theme='powerlineish'
Bundle 'bling/vim-bufferline'
Bundle "ekalinin/Dockerfile.vim"
Bundle "tclem/vim-arduino"
Bundle 'hsanson/vim-android'
Bundle 'vim-scripts/NesC-Syntax-Highlighting'
Bundle 'digitaltoad/vim-jade'
Bundle 'groenewege/vim-less'
"Bundle 'ivanov/vim-ipython'
Plugin 'derekwyatt/vim-scala'
Bundle 'klen/python-mode'
Plugin 'airblade/vim-gitgutter'
"Plugin 'mhinz/vim-startify'
Bundle 'wakatime/vim-wakatime'
